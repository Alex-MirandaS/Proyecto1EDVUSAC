package Proyecto1;

import java_cup.runtime.*;

class Parser;

/* TERMINALES */

terminal DIG, LETRA, WhiteSpace;
terminal MAS, DIV, MEN, MULT, ASIG, IGUAL, DESIG, MENORQ, MENORI, MAYORQ, MAYORI, PUNTO, COMA, PYCOMA, DOSPUNTOS, PARAB, PARCER, LLAB, LLCER, AND, OR, NOT, GBAJO, COMS;
terminal INT, DOUBLE, CHAR, BOOL, STRING;
terminal VOID, MAIN, DEF, BRK, RTRN, CONT, CNSL, WRTE;
terminal ELSE, IF, SWT, CASE, FOR, WHILE, DO;
terminal NEW, TRUE, FALSE;
terminal COMENTM, COMENTS, DECD, ENTD, CHARACD, BOOLEAD, ID;

/* NO TERMINAL */

non terminal todo, comen, asign, idList, tida, idList, paramList, datList, expr, met, fun, main, param, sent, iff, cas, crecd, con, elseif, swit, forr, whil, dowhil, impr;

/* PRECEDENCIA */

precedence left MAS, MEN;
precedence left MULT, DIV;


todo    ::= comen 
        | comen todo
        | asign
        | asign todo
        | met
        | met todo
        | fun
        | fun todo
        ;

comen   ::= COMENTS
        | COMENTM
        ;

asign   ::= tida idList PYCOMA
        |   tida idList ASIG expr PYCOMA
        ;

idList  ::= ID COMA idList
        |   ID
        ;

tida    ::= INT
        |   DOUBLE
        |   CHAR
        |   BOOL
        |   STRING
        ;
        
expr    ::= expr:ex1 MAS expr:ex2       {: RESULT = ex1 + ex2; :}                        
        | expr:ex1 MEN expr:ex2         {: RESULT = ex1 - ex2; :}              
        | expr:ex1 MULT expr:ex2        {: RESULT = ex1 * ex2; :}               
        | expr:ex1 DIV expr:ex2         {: RESULT = ex1 / ex2; :}
        | ID PARAB PARCER               
        | ID PARAB paramList PARCER                       
        | PARAB expr:ex PARCER          {: RESULT = ex; :}
        | datList:d                     {: RESULT = d; :}
        ;

paramList   ::= datList COMA
            |   datList
            ;  

datList ::=     ENTD:d                  {: RESULT = d;:}
            |   DECD:d                  {: RESULT = d;:}
            |   ID:d                    {: RESULT = d;:}
            |   BOOLEAD:d               {: RESULT = d;:}
            |   STRING:d                {: RESULT = d;:}
            ;   

met     ::= VOID ID PARAB param PARCER LLAB todo LLCER
        |   VOID ID PARAB PARCER LLAB todo LLCER   
        ;

fun     ::= tida ID PARAB param PARCER LLAB todo LLCER
        |   tida ID PARAB PARCER LLAB todo LLCER
        ;
    
main    ::= VOID MAIN PARAB PARCER LLAB todo LLCER

param   ::= tida ID COMA param
        |   tida ID
        ;

sent    ::= iff
        |   swit
        |   forr
        |   whil
        |   dowhil
        ;

iff     ::= IF PARAB con PARCER LLAB todo LLCER elseif
        |   IF PARAB con PARCER LLAB todo LLCER
        ;

elseif  ::= ELSE IF PARAB con PARCER LLAB todo LLCER elseif
        |   ELSE IF PARAB con PARCER LLAB todo LLCER
        |   ELSE LLAB todo LLCER
        ;

swit    ::= SWT PARAB expr PARCER LLAB cas LLCER
        |   SWT PARAB expr PARCER LLAB cas DEF DOSPUNTOS todo LLCER
        ;

cas     ::= CASE expr DOSPUNTOS todo cas
        |   CASE expr DOSPUNTOS todo 
        |   CASE expr DOSPUNTOS todo BRK PYCOMA cas
        |   CASE expr DOSPUNTOS todo BRK PYCOMA 
        
        ;

forr    ::= FOR PARAB INT ID ASIG expr PYCOMA con PYCOMA crecd PARCER LLAB todo LLCER
        ;
        
whil    ::= WHILE PARAB con PARCER LLAB todo LLCER
        ;

dowhil  ::= DO LLAB todo LLCER WHILE PARAB con PARCER PYCOMA

crecd   ::= ID MAS MAS
        |   ID MEN MEN
        |   MAS MAS ID
        |   MEN MEN ID
        ;

con     ::= expr IGUAL expr 
        |   expr DESIG expr 
        |   expr MENORQ expr
        |   expr MENORI expr
        |   expr MAYORQ expr
        |   expr MAYORI expr
        |   expr
        ;

impr    ::= CNSL PUNTO WRTE PARAB expr PARCER PYCOMA



